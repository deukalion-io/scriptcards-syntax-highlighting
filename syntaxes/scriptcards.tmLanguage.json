{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "ScriptCards",
	"scopeName": "source.scard",
	"patterns": [{
			"name": "condition.statement.scriptcards",
			"begin": "(--\\?.+\\[$)",
			"beginCaptures": {
				"0": {
					"patterns": [{
							"include": "#statement"
						},
						{
							"include": "#statement-util"
						}

					]
				}
			},
			"end": "(--]\\|\\s*$)",
			"endCaptures": {
				"0": {
					"patterns": [{
						"include": "#identifier"
					}]
				}
			},
			"patterns": [{
					"name": "condition-end.identifier.scriptcards",
					"match": "--\\]\\|\\[",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"include": "#statement"
				},
				{
					"include": "#statement-util"
				}
			]
		},
		{
			"include": "#statement"
		}
	],
	"repository": {
		"operators": {
			"name": "operator.scriptcards",
			"match": "(-(eqi?|g[t|e]|nei?|l[t|e]|n?inc))",
			"captures": {
				"0": {
					"patterns": [{
						"include": "#comparison-operators"
					}]
				}
			}
		},
		"comparison-operators": {
			"patterns": [{
					"name": "equalto.operator.scriptcards",
					"match": "-eq"
				},
				{
					"name": "equaltocaseinsensitive.operator.scriptcards",
					"match": "-eqi"
				},
				{
					"name": "notequalto.operator.scriptcards",
					"match": "-ne"
				},
				{
					"name": "notequaltocaseinsensitive.operator.scriptcards",
					"match": "-nei"
				},
				{
					"name": "greaterthan.operator.scriptcards",
					"match": "-gt"
				},
				{
					"name": "greaterthanorequalto.operator.scriptcards",
					"match": "-gt"
				},
				{
					"name": "lessthan.operator.scriptcards",
					"match": "-lt"
				},
				{
					"name": "lessthanorequalto.operator.scriptcards",
					"match": "-le"
				},
				{
					"name": "includes.operator.scriptcards",
					"match": "-inc"
				},
				{
					"name": "notincludes.operator.scriptcards",
					"match": "-ninc"
				}
			]
		},
		"statement": {
			"patterns": [{
				"name": "statement.scriptcards",
				"begin": "(?=--)",
				"end": "(?=\n)",
				"patterns": [{
					"include": "#statements"
				}]
			}]
		},
		"statement-util": {
			"patterns": [{
					"include": "#tag"
				},
				{
					"include": "#reference"
				},
				{
					"include": "#quoted-text"
				}
			]

		},
		"statements": {
			"patterns": [{
					"name": "_comment.statement.scriptcards",
					"begin": "(--\\/)",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n)"
				},
				{
					"name": "condition.statement.scriptcards",
					"begin": "(--\\?)",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n)",
					"patterns": [{
							"include": "#statement-util"
						},
						{
							"include": "#branch-format"
						}
					]
				},
				{
					"name": "visualeffect.statement.scriptcards",
					"begin": "(--v)",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n)",
					"patterns": [{
						"include": "#statement-util"
					}]
				},
				{
					"name": "audioeffect.statement.scriptcards",
					"begin": "(--a)",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n)",
					"patterns": [{
						"include": "#statement-util"
					}]
				},
				{
					"name": "roll.statement.scriptcards",
					"begin": "(--=)",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
						"include": "#statement-util"
					}]
				},
				{
					"name": "_string.statement.scriptcards",
					"begin": "(--&)",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
							"include": "#statement-util"
						},
						{
							"include": "#inline-formatting"
						}
					]
				},
				{
					"name": "parameter.statement.scriptcards",
					"begin": "(--#)",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
						"include": "#statement-util"
					}]
				},
				{
					"name": "output.statement.scriptcards",
					"begin": "(--)\\+",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
							"include": "#statement-util"
						},
						{
							"include": "#inline-formatting"
						}
					]
				},
				{
					"name": "branchlabel.statement.scriptcards",
					"begin": "(--):",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
							"include": "#tag"
						},
						{
							"include": "#comments-inline"
						}
					]
				},
				{
					"name": "branchto.statement.scriptcards",
					"begin": "(--)\\^",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
							"include": "#tag"
						},
						{
							"include": "#comments-inline"
						}
					]
				},
				{
					"name": "proccall.statement.scriptcards",
					"begin": "(--)>",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
						"include": "#statement-util"
					}]
				},
				{
					"name": "procreturn.statement.scriptcards",
					"begin": "(--)<\\|",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
							"include": "#tag"
						},
						{
							"include": "#comments-inline"
						}
					]
				},
				{
					"name": "repeating.statement.scriptcards",
					"begin": "(--)R",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
						"include": "#statement-util"
					}]
				},
				{
					"name": "builtin.statement.scriptcards",
					"begin": "(--)~",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
						"include": "#statement-util"
					}]
				},
				{
					"name": "case.statement.scriptcards",
					"begin": "(--)[cC]",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
						"include": "#statement-util"
					}]
				},
				{
					"name": "exit.statement.scriptcards",
					"begin": "(--)X",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
						"include": "#statement-util"
					}]
				},
				{
					"name": "loop.statement.scriptcards",
					"begin": "(--)%",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(--)%(?=\\|)",
					"endCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"patterns": [{
							"include": "#statement-util"
						},
						{
							"include": "#statements"
						}
					]
				},
				{
					"name": "objectmod.statement.scriptcards",
					"begin": "(--\\!)",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
						"include": "#statement-util"
					}]
				},
				{
					"name": "loadstorage.statement.scriptcards",
					"begin": "(--[lL])",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
						"include": "#statement-util"
					}]
				},
				{
					"name": "echo.statement.scriptcards",
					"begin": "(--e)",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
						"include": "#statement-util"
					}]
				},
				{
					"name": "storestorage.statement.scriptcards",
					"begin": "(--[sS])",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
						"include": "#statement-util"
					}]
				},
				{
					"name": "info.statement.scriptcards",
					"begin": "(--[iI])",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)"
				},
				{
					"name": "gmwhisper.statement.scriptcards",
					"begin": "(--\\*)",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
						"include": "#statement-util"
					}]
				},
				{
					"name": "api.statement.scriptcards",
					"begin": "(--@)",
					"beginCaptures": {
						"0": {
							"patterns": [{
								"include": "#identifier"
							}]
						}
					},
					"end": "(?=\n|--)",
					"patterns": [{
						"include": "#statement-util"
					}]
				}
			]
		},
		"tag": {
			"name": "tag.scriptcards",
			"match": "(?<=--(@|:|\\^|~|[cC]|\\?|\\*|[lL]|%|!|#|\\>|=|&|[sS]|v))[^|]+\\||(?<=--(a|\\*|\\+))[^|]*\\|",
			"captures": {
				"0": {
					"patterns": [{
						"include": "#tags"
					}]
				}
			}
		},
		"tags": {
			"patterns": [
				{
					"name": "api.tag.scriptcards",
					"match": "(?<=--@)[^|]+\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "audioeffect.tag.scriptcards",
					"match": "(?<=--a)[^|]*\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "branchlabel.tag.scriptcards",
					"match": "(?<=--:)[^|]+\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "branchto.tag.scriptcards",
					"match": "(?<=--\\^)[^|]+\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "builtin.tag.scriptcards",
					"match": "(?<=--~)[^|]+\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "case.tag.scriptcards",
					"match": "(?<=--[cC])[^|]+\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "condition.tag.scriptcards",
					"match": "(?<=--\\?)[^|]+\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								},
								{
									"include": "#quoted-text"
								},
								{
									"include": "#operators"
								}
							]
						}
					}
				},
				{
					"name": "echo.tag.scriptcards",
					"match": "(?<=--e)[^|]+\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "gmwhisper.tag.scriptcards",
					"match": "(?<=--\\*)[^|]*\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "loadstorage.tag.scriptcards",
					"match": "(?<=--[lL])[^|]+\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "loop.tag.scriptcards",
					"match": "(?<=--%)[^|]+\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "objectmod.tag.scriptcards",
					"match": "(?<=--!)[^|]+\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "output.tag.scriptcards",
					"match": "(?<=--\\+)[^|]*\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "parameter.tag.scriptcards",
					"match": "(?<=--#)[^|]+\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "proccall.tag.scriptcards",
					"match": "(?<=--\\>)[^|]+\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "roll.tag.scriptcards",
					"match": "(?<=--=)[^|]+\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "_string.tag.scriptcards",
					"match": "(?<=--&)[^|]+\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "storestorage.tag.scriptcards",
					"match": "(?<=--[sS])[^|]+\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				},
				{
					"name": "visualeffect.tag.scriptcards",
					"match": "(?<=--v)[^|]+\\|",
					"captures": {
						"0": {
							"patterns": [{
									"include": "#separator-pipe"
								},
								{
									"include": "#reference"
								}
							]
						}
					}
				}
			]
		},
		"reference": {
			"name": "reference.scriptcards",
			"match": "\\[&[^&]+?\\]|(?<=\\||;)\\&[^;$]+|(?<=--%)[^|]+|\\[\\$[^$]+?\\]|(?<!/\\|)(?<=\\||;)=[^;$]+|\\[%\\d%\\]|\\[\\*(S|R>?|C|P|T):.+?]",
			"captures": {
				"0": {
					"patterns": [{
						"include": "#references"
					}]
				}
			}
		},
		"references": {
			"patterns": [{
					"name": "_string.reference.scriptcards",
					"match": "\\[&[^&]+?\\]|(?<=\\||;)\\&[^;$]+|(?<=--%)[^|]+"
				},
				{
					"name": "sourcetoken.reference.scriptcards",
					"match": "\\[\\*S:.+?]"
				},
				{
					"name": "repeatingvalue.reference.scriptcards",
					"match": "\\[\\*R:.+?]"
				},
				{
					"name": "repeatingattribute.reference.scriptcards",
					"match": "\\[\\*R\\>[^]]+]"
				},
				{
					"name": "campaign.reference.scriptcards",
					"match": "\\[\\*C:.+?]"
				},
				{
					"name": "page.reference.scriptcards",
					"match": "\\[\\*P:.+?]"
				},
				{
					"name": "targettoken.reference.scriptcards",
					"match": "\\[\\*T:.+?]"
				},
				{
					"name": "roll.reference.scriptcards",
					"match": "\\[\\$[^$]+?\\]|(?<!/\\|)(?<=\\||;)=[^;$]+"
				},
				{
					"name": "parameter.reference.scriptcards",
					"match": "\\[%\\d%\\]"
				}
			]
		},
		"identifier" : {
			"name": "identifier.scriptcards",
			"match": "--(@|a|:|\\^|~|[cC]|\\/|\\?|\\]|e|X|\\*|[iI]|[lL]|%|!|\\+|#|\\>|\\<\\||R|=|&|[sS]|v)",
			"captures": {
				"0": {
					"patterns": [{
						"include": "#identifiers"
					}]
				}
			}
		},
		"identifiers": {
			"patterns": [
				{
					"name": "api.identifier.scriptcards",
					"match": "(--)@",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "audioeffect.identifier.scriptcards",
					"match": "(--)a",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "branchlabel.identifier.scriptcards",
					"match": "(--):",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "branchto.identifier.scriptcards",
					"match": "(--)\\^",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "builtin.identifier.scriptcards",
					"match": "(--)~",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "case.identifier.scriptcards",
					"match": "(--)[cC]",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "_comment.identifier.scriptcards",
					"match": "(--)\\/",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "condition.identifier.scriptcards",
					"match": "(--)\\?",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "condition-end.identifier.scriptcards",
					"match": "(--)\\]",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "echo.identifier.scriptcards",
					"match": "(--)e",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "exit.identifier.scriptcards",
					"match": "(--)X",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "gmwhisper.identifier.scriptcards",
					"match": "(--)\\*",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "info.identifier.scriptcards",
					"match": "(--)[iI]",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "loadstorage.identifier.scriptcards",
					"match": "(--)[lL]",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "loop.identifier.scriptcards",
					"match": "(--)%",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "objectmod.identifier.scriptcards",
					"match": "(--)\\!",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "output.identifier.scriptcards",
					"match": "(--)\\+",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "parameter.identifier.scriptcards",
					"match": "(--)#",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "proccall.identifier.scriptcards",
					"match": "(--)>",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "procreturn.identifier.scriptcards",
					"match": "(--)<\\|",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "repeating.identifier.scriptcards",
					"match": "(--)R",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "roll.identifier.scriptcards",
					"match": "(--)=",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "_string.identifier.scriptcards",
					"match": "(--)&",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "storestorage.identifier.scriptcards",
					"match": "(--)[sS]",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				},
				{
					"name": "visualeffect.identifier.scriptcards",
					"match": "(--)v",
					"captures": {
						"0": {
							"patterns": [{
								"include": "#doubledash"
							}]
						}
					}
				}
			]
		},
		"comments-inline": {
			"patterns": [{
				"name": "_comment.statement.scriptcards",
				"begin": "(?<!\\G)",
				"end": "(?=\n|--)"
			}]
		},
		"doubledash": {
			"name": "doubledash.scriptcards",
			"match": "--"

		},
		"quoted-text": {
			"patterns": [{
				"name": "quoted.scriptcards",
				"match": "\"[^\"]*\"",
				"captures": {
					"0": {
						"patterns": [{
							"include": "#reference"
						}]
					}
				}
			}]
		},
		"separator-pipe": {
			"patterns": [{
				"name": "separatorpipe.scriptcards",
				"match": "\\|"
			}]
		},
		"inline-formatting": {
			"patterns": [{
				"name": "inlineformatting.scriptcards",
				"match": "\\[\/?(#|br|b|i|u|s|c|l|r|j|img|button|sheetbutton|rbutton|t|tr|td|#[0-9A-Fa-f]{3}|#[0-9A-Fa-f]{6})\\]|\\[hr\\s#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})\\]"
			}]
		},
		"branch-format": {
			"patterns": [{
					"name": "branchto.statement.scriptcards",
					"match": "[\\w\\s]+(?=\\||\\n)"
				},
				{
					"name": "proccall.statement.scriptcards",
					"match": ">[\\w\\s]+(?=;|\\||\\n)"
				}
			]
		}
	}
}